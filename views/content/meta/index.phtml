<?php
/*
 * Copyright (c) 2013, webvariants GbR, http://www.webvariants.de
 *
 * This file is released under the terms of the MIT license. You can find the
 * complete text in the attached LICENSE file or online at:
 *
 * http://www.opensource.org/licenses/mit-license.php
 */

print sly_Helper_Message::renderFlashMessage();

$category_id = $article->getCategoryId();
$params      = array('id' => $article->getId(), 'clang' => $article->getClang(), 'article' => $article, 'revisions' => $revisions, 'total_revisions' => $total);
$form        = new sly_Form($_router->getPlainUrl(null, 'processmetaform'), 'POST', t('general'));

$form->setEncType('multipart/form-data');
$form->addHiddenValue('article_id', $article->getId());
$form->addHiddenValue('clang', $article->getClang());
$form->addHiddenValue('revision', $article->getRevision());
$form->setSubmitButton(null);
$form->setResetButton(null);

/////////////////////////////////////////////////////////////////
// article metadata

$dispatcher = sly_Core::dispatcher();
$form       = $dispatcher->filter('SLY_ART_META_FORM', $form, $params);

if ($form->getCurrentFieldset() !== null) {
	$button = new sly_Form_Input_Button('submit', 'save_meta', t('save'));
	$form->add(new sly_Form_ButtonBar(array('submit' => $button)));
}

/////////////////////////////////////////////////////////////////
// revision select

$form->beginFieldset('', 'sly-article-revisions');

$table = new sly_Table('sly-article-revisions-table');
$table->addColumn(sly_Table_Column::sprite('article', null));
$table->addColumn(sly_Table_Column::factory(t('abbreviation_revision'), 'sly-col-rev'));
$table->addColumn(sly_Table_Column::factory(t('create_time'), 'sly-col-created'));
$table->addColumn(sly_Table_Column::factory(t('user'), 'sly-col-user'));
$table->addColumn(sly_Table_Column::factory(t('functions'), 'sly-col-func'));

$table->setPagerParam('revisions');
$table->openBuffer();

foreach ($revisions as $revision) {
	$id        = $revision->getId();
	$clang     = $revision->getClang();
	$rev       = $revision->getRevision();
	$online    = $revision->isOnline();
	$current   = $rev === $article->getRevision();
	$selectUrl = $_router->getUrl('content', null, array('article_id' => $id, 'clang' => $clang, 'revision' => $rev), '&');
	$deleteUrl = $_router->getUrl('contentmeta', 'deleterevision', array('article_id' => $id, 'clang' => $clang, 'revision' => $rev), '&');
	$user      = $userService->findByLogin($revision->getCreateUser());
	$username  = $user ? ($user->getName() ?: $user->getLogin()) : $revision->getCreateUser();

	?>
	<tr data-slyid="<?php echo $id ?>" data-slyclang="<?php echo $clang ?>" data-slyrevision="<?php echo $rev ?>" data-slyonline="<?php echo $online ? '1' : '0' ?>">
		<td class="sly-col-icon sly-icon"><?php echo sly_Util_HTML::getSpriteLink($selectUrl, t('contentmeta_select_revision'), 'article') ?></td>
		<td class="sly-col-rev"><?php echo sly_Util_String::formatNumber($rev, 0) ?></td>
		<td class="sly-col-created <?php echo $online ? 'sly-online' : 'sly-offline' ?>">
			<?php
			if ($current) print '<strong>';
			echo sly_Util_HTML::getDatetimeTag($revision->getUpdateDate());
			if ($current) print '</strong>';
			?>
		</td>
		<td class="sly-col-user"><?php echo sly_html($username) ?></td>
		<td class="sly-col-func"><a href="<?php echo $deleteUrl ?>" class="sly-delete sly-postlink"><?php echo t('delete_revision') ?></a></td>
	</tr>
	<?php
}

$table->closeBuffer();
$revSelect = new sly_Form_Fragment($table->render($total));
$form->addElement($revSelect);

/////////////////////////////////////////////////////////////////
// misc

// allow addons to add fieldsets

$form = $dispatcher->filter('SLY_ART_META_FORM_FIELDSET', $form, $params);

// copy content

$langB = $baseSelect = sly_Backend_Form_Helper::getLanguageSelect('clang_b');
if ($langB->getValueCount() > 1) {
	$langB->setSize(1);
	$langB->setLabel(t('to_language'));
	$langB->setAttribute('id', 'clang_b');
	$langB->setAttribute('name', 'clang_b');
	$langB->setSelected($clangB);
	$langB->setMultiple(true);

	$form->beginFieldset(t('copy_content'), null, 2);
	$form->add($langB);

	sly_Helper_Content::metaFormAddButtonBar($form, t('copy_content'), 'copy_content');
}

// move article

if ($this->canMoveArticle()) {
	$select = sly_Backend_Form_Helper::getCategorySelect('category_id_new', false, null, null, $user);
	$select->setAttribute('value', $category_id);
	$select->setLabel(t('target_category'));

	$form->beginFieldset(t('move_article'));
	$form->add($select);

	sly_Helper_Content::metaFormAddButtonBar($form, t('move_article'), 'move_article');
}

// copy article

$select = sly_Backend_Form_Helper::getCategorySelect('category_copy_id_new', false, null, null, $user);
$select->setAttribute('value', $category_id);
$select->setLabel(t('target_category'));

$form->beginFieldset(t('copy_article'));
$form->add($select);

sly_Helper_Content::metaFormAddButtonBar($form, t('copy_article'), 'copy_article');

// move category

if ($this->canMoveCategory()) {
	$select = sly_Backend_Form_Helper::getCategorySelect('category_id_new', false, null, null, $user);
	$select->setAttribute('value', $category_id);
	$select->setLabel(t('target_category'));

	$form->beginFieldset(t('move_category'));
	$form->add($select);

	sly_Helper_Content::metaFormAddButtonBar($form, t('move_category'), 'move_category');
}

// convert to startarticle

if ($this->canConvertToStartarticle()) {
	$form->beginFieldset(t('startarticle'));

	if ($article->getStartpage() == 0 && $article->getParentId() == 0) {
		$form->add(new sly_Form_Text('', t('root_articles_cannot_be_startarticles')));
	}
	elseif ($article->getStartpage() == 1) {
		$form->add(new sly_Form_Text('', t('article_is_startarticle')));
	}
	else {
		sly_Helper_Content::metaFormAddButtonBar($form, t('convert_to_startarticle'), 'to_startarticle');
	}
}

$form = $dispatcher->filter('SLY_ART_META_FORM_ADDITIONAL', $form, $params);
if ($form instanceof sly_Viewable) print $form->render();
