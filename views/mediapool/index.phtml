<?php
/*
 * Copyright (c) 2014, webvariants GmbH & Co. KG, http://www.webvariants.de
 *
 * This file is released under the terms of the MIT license. You can find the
 * complete text in the attached LICENSE file or online at:
 *
 * http://www.opensource.org/licenses/mit-license.php
 */

use sly\Assets\Util;

// @edge rewritten view logic
$selected = $this->getCurrentCategory();

////////////////////////////////////////////////////////
// list all files in the current category

$form = new sly_Form($_router->getPlainUrl(null, 'batch'), 'POST', t('selected_category'), '', 'sly-form-mediapool-media');
$form->addHiddenValue('page', 'mediapool');
$form->addHiddenValue('func', 'batch');
$this->appendParamsToForm($form);

$isAdmin = $this->isMediaAdmin();

////////////////////////////////////////////////////////
// prepare table

$table = new sly_Table('media', array('sly-mediapool-list'));

$table->addColumn(sly_Table_Column::factory('<input class="sly-form-checkbox sly-check-all" type="checkbox" id="check_all" data-target="selectedmedia[]" />', 'sly-icon sly-col-icon'));
$table->addColumn(sly_Table_Column::factory(t('thumbnail'), 'sly-col-thumbnail'));
$table->addColumn(sly_Table_Column::factory(t('file_info').' / '.t('description'), 'sly-col-info'));
$table->addColumn(sly_Table_Column::factory(t('functions'), 'sly-col-func'));

$table->setIsEmpty(empty($files));
$table->setEmptyNotice(t('no_media_found'));
$table->openBuffer();

////////////////////////////////////////////////////////
// list files

foreach ($files as $file) {
	$id        = $file->getId();
	$filename  = $file->getFilename();
	$title     = $file->getTitle();
	$thumbnail = $this->getThumbnailTag($file, 240, 240);
	$encoded   = urlencode($filename);

	if ($title == '') $title = '['.t('no_title').']';

	$ilink  = $_router->getUrl('mediapool_detail', null, $this->appendQueryString(array('file_id' => $id)));
	$add_td = '<td>&nbsp;</td>';

	if ($isAdmin) {
		$add_td = '<td class="sly-col-icon sly-icon"><input class="sly-form-checkbox" type="checkbox" name="selectedmedia[]" value="'.$id.'" /></td>';
	}

	?>
	<tr>
		<?php echo $add_td ?>
		<td class="sly-col-thumbnail"><a href="<?php echo $ilink ?>"><?php echo $thumbnail ?></a></td>
		<td class="sly-col-info">
			<span><a href="<?php echo $ilink ?>"><?php echo sly_html($title) ?></a></span><br />
			<span><span class="sly-suffix"><?php echo sly_html(sly_Util_String::cutText($filename, 35)) ?> [<?php echo $file->getFormattedSize() ?>]</span></span>
		</td>
		<td class="sly-col-func"><?php

		$opener_link = $this->getOpenerLink($file);
		print sly_Core::dispatcher()->filter('SLY_MEDIA_LIST_FUNCTIONS', $opener_link, array('medium' => $file));

		?></td>
	</tr>
	<?php
}

$table->closeBuffer();

////////////////////////////////////////////////////////
// putting it all together

$container = new sly_Form_Container();
$container->setContent($table->render($total));
$form->add($container);

////////////////////////////////////////////////////////
// move and delete selected items

if ($isAdmin) {
	$inputs  = '';
	$select  = $this->getCategorySelect();
	$select->setLabel('');
	$buttons = new sly_Form_ButtonBar();

	if ($select->getValueCount() > 1) {
		$select->setAttribute('id', 'sly_dest_category');
		$select->setAttribute('onchange', '');
		$form->add($select);

		$move = new sly_Form_Input_Button('submit', 'move', t('move_to_category'));
		$buttons->addButton($move);
	}

	$delete = new sly_Form_Input_Button('submit', 'delete', t('delete'));
	$delete->addClass('sly-button-delete');
	$buttons->addButton($delete);

	$form->add($buttons);
}

$form->setResetButton(null);
$form->setSubmitButton(null);
print $form->render();
