<?php
/*
 * Copyright (c) 2014, webvariants GmbH & Co. KG, http://www.webvariants.de
 *
 * This file is released under the terms of the MIT license. You can find the
 * complete text in the attached LICENSE file or online at:
 *
 * http://www.opensource.org/licenses/mit-license.php
 */

// @edge rewritten view logic
$selected = $this->getCurrentCategory();

////////////////////////////////////////////////////////
// list all files in the current category

$form = new sly_Form($_router->getPlainUrl(null, 'batch'), 'POST', t('recycle_bin'), '', 'sly-form-mediapool-media');
$this->appendParamsToForm($form);

$isAdmin = $this->isMediaAdmin();

////////////////////////////////////////////////////////
// prepare table

$table = new sly_Table('', array('sly-mediapool-list'));

$table->addColumn(sly_Table_Column::factory('<input class="sly-form-checkbox sly-check-all" type="checkbox" id="check_all" data-target="media[]" />', 'sly-icon sly-col-icon'));
$table->addColumn(sly_Table_Column::factory(t('thumbnail'), 'sly-col-thumbnail'));
$table->addColumn(sly_Table_Column::factory(t('file_info').' / '.t('description'), 'sly-col-info'));
$table->addColumn(sly_Table_Column::factory(t('functions'), 'sly-col-func'));

$table->setIsEmpty(empty($files));
$table->setEmptyNotice(t('no_media_found'));
$table->openBuffer();

////////////////////////////////////////////////////////
// list files

foreach ($files as $file) {
	$id        = $file->getId();
	$filename  = $file->getFilename();
	$title     = $file->getTitle();
	$thumbnail = $this->getThumbnailTag($file, 60, 55);

	if ($title == '') $title = '['.t('no_title').']';

	$ilink  = $_router->getUrl('mediapool_detail', null, $this->appendQueryString(array('file_id' => $id)));
	$add_td = '<td>&nbsp;</td>';

	if ($canDelete || $canRestore) {
		$add_td = '<td class="sly-col-icon sly-icon"><input class="sly-form-checkbox" type="checkbox" name="media[]" value="'.$id.'" /></td>';
	}

	?>
	<tr>
		<?php echo $add_td ?>
		<td class="sly-col-thumbnail"><a href="<?php echo $ilink ?>"><?php echo $thumbnail ?></a></td>
		<td class="sly-col-info">
			<span><a href="<?php echo $ilink ?>"><?php echo sly_html($title) ?></a></span><br />
			<span><span class="sly-suffix"><?php echo sly_html(sly_Util_String::cutText($filename, 35)) ?> [<?php echo $file->getFormattedSize() ?>]</span></span>
		</td>
		<td class="sly-col-func">
			<?php
				$restoreUrl = $_router->getPlainUrl(null, 'batch', array('restore' => 1, 'media' => $file->getId()));
				$deleteUrl  = $_router->getPlainUrl(null, 'batch', array('delete_permanent' => 1, 'media' => $file->getId()));
			?>
			<?php if($canRestore) { ?>
			<a class="sly-postlink sly-confirm-me" href="<?php echo  $restoreUrl; ?>"><?php echo t('restore'); ?></a>
			<?php } ?>
			<?php if($canDelete) { ?>
			<a class="sly-postlink sly-delete" href="<?php echo  $deleteUrl; ?>"><?php echo t('delete_permanent'); ?></a>
			<?php } ?>
		</td>
	</tr>
	<?php
}

$table->closeBuffer();

////////////////////////////////////////////////////////
// putting it all together

$container = new sly_Form_Container();
$container->setContent($table->render());
$form->add($container);

////////////////////////////////////////////////////////
// move and delete buttons

if ($canDelete || $canRestore) {
	$buttons = new sly_Form_ButtonBar();

	if ($canRestore) {
		$restore = new sly_Form_Input_Button('submit', 'restore', t('restore'));
		$buttons->addButton($restore);
	}

	if ($canDelete) {
		$delete = new sly_Form_Input_Button('submit', 'delete_permanent', t('delete_permanent'));
		$buttons->addButton($delete);
	}

	if ($buttons->getButtons()) {
		$form->add($buttons);
	}
}

$form->setResetButton(null);
$form->setSubmitButton(null);
print $form->render();
